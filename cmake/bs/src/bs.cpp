#include "opencv2/imgcodecs.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/videoio.hpp"
#include <opencv2/highgui.hpp>
#include <opencv2/video.hpp>
#include <cstdio>
#include <iostream>
using namespace cv;
using namespace std;

Mat frame; //current frame
Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method
Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor

void processVideo(char* videoFilename);
void processImages(char* firstFrameFilename);

int main(int argc, char* argv[])
{
	//create GUI windows
	namedWindow("Frame");
	namedWindow("FG Mask MOG 2");
	//create Background Subtractor objects
	pMOG2 = createBackgroundSubtractorMOG2(); //MOG2 approach

	processVideo("../res/v.mp4");

	//destroy GUI windows
	destroyAllWindows();
	return 0;
}

void processVideo(char* videoFilename) {

	VideoCapture capture(videoFilename);
	while( true ){
		//read the current frame
		capture.read(frame);

		//update the background model
		pMOG2->apply(frame, fgMaskMOG2);
		/*
		   for (int i = 0; i < fgMaskMOG2.rows; i++) {
		   for (int j = 0; j < fgMaskMOG2.cols; j++) {
		   if (fgMaskMOG2.at<unsigned char>(i, j) > 0) cout<<int(fgMaskMOG2.at<unsigned char>(i, j))<<endl;
		   }
		   }
		   */
		//show the current frame and the fg masks
		imshow("Frame", frame);
		imshow("FG Mask MOG 2", fgMaskMOG2);

		waitKey( 30 );
	}
	capture.release();
	return ;
}
